-- MySQL Workbench Forward EngineeringSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';-- ------------------------------------------------------- Schema resturantDB-- ------------------------------------------------------- ------------------------------------------------------- Schema resturantDB-- -----------------------------------------------------CREATE SCHEMA IF NOT EXISTS `resturantDB` DEFAULT CHARACTER SET utf8 ;USE `resturantDB` ;-- ------------------------------------------------------- Table `resturantDB`.`inventory`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`inventory` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`inventory` (  `inventoryID` INT NOT NULL AUTO_INCREMENT,  `item` VARCHAR(45) NULL,  `qty` DOUBLE NULL,  `itemThreshold` DOUBLE NULL DEFAULT 0.25,  `itemLimit` DOUBLE NULL,  PRIMARY KEY (`inventoryID`))ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`supplier`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`supplier` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`supplier` (  `supplierID` INT NOT NULL AUTO_INCREMENT,  `supplierName` VARCHAR(45) NULL,  `supplierEmail` VARCHAR(45) NULL,  `supplierNumber` VARCHAR(45) NULL,  `supplierAddress` VARCHAR(45) NULL,  PRIMARY KEY (`supplierID`))ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`employee`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`employee` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`employee` (  `employeeID` INT NOT NULL AUTO_INCREMENT,  `employeeFName` VARCHAR(45) NULL,  `employeeLName` VARCHAR(45) NULL,  `employeePassword` VARCHAR(45) NOT NULL,  `employeeContactNumber` VARCHAR(45) NULL,  `employeeHoursWorked` VARCHAR(45) NULL DEFAULT '00:00',  `employeeStatus` VARCHAR(45) NULL,  `employeePosition` VARCHAR(45) NULL,  `admin` TINYINT(1) NULL DEFAULT 0,  PRIMARY KEY (`employeeID`))ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`reservation`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`reservation` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`reservation` (  `reservationID` INT NOT NULL AUTO_INCREMENT,  `employeeID` INT NOT NULL,  `reservationDate` VARCHAR(45) NULL,  `reservationTime` VARCHAR(45) NULL,  `reservationCustomer` VARCHAR(45) NULL,  `reservationTableNumber` VARCHAR(45) NULL,  `reservationNumberPeople` VARCHAR(45) NULL,  PRIMARY KEY (`reservationID`, `employeeID`),  CONSTRAINT `fk_reservation_employee1`    FOREIGN KEY (`employeeID`)    REFERENCES `resturantDB`.`employee` (`employeeID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION)ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`recipe`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`recipe` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`recipe` (  `recipeID` INT NOT NULL AUTO_INCREMENT,  `recipeName` VARCHAR(45) NULL,  `recipePrice` VARCHAR(45) NULL,  `recipeVAT` VARCHAR(45) NULL,  `recipeType` VARCHAR(45) NULL,  `recipeImageDirectory` VARCHAR(150) NULL,  `recipeCount` VARCHAR(45) NULL,  PRIMARY KEY (`recipeID`))ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`inventory_recipe`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`inventory_recipe` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`inventory_recipe` (  `inventory_recipeID` INT NOT NULL AUTO_INCREMENT,  `inventoryID` INT NOT NULL,  `recipeID` INT NOT NULL,  `qty` DOUBLE NULL,  PRIMARY KEY (`inventory_recipeID`, `inventoryID`, `recipeID`),  CONSTRAINT `fk_inventory_recipt_inventory`    FOREIGN KEY (`inventoryID`)    REFERENCES `resturantDB`.`inventory` (`inventoryID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION,  CONSTRAINT `fk_inventory_recipt_reciept1`    FOREIGN KEY (`recipeID`)    REFERENCES `resturantDB`.`recipe` (`recipeID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION)ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`stockOrder`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`stockOrder` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`stockOrder` (  `stockOrderID` INT NOT NULL AUTO_INCREMENT,  `inventoryID` INT NOT NULL,  `supplierID` INT NOT NULL,  `dateOrdered` DATE NULL,  `dateETA` DATE NULL,  `quantity` DOUBLE NULL,  `status` VARCHAR(45) NULL,  PRIMARY KEY (`stockOrderID`, `inventoryID`, `supplierID`),  CONSTRAINT `fk_stockOrder_inventory1`    FOREIGN KEY (`inventoryID`)    REFERENCES `resturantDB`.`inventory` (`inventoryID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION,  CONSTRAINT `fk_stockOrder_supplier1`    FOREIGN KEY (`supplierID`)    REFERENCES `resturantDB`.`supplier` (`supplierID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION)ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`sales`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`sales` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`sales` (  `salesID` INT NOT NULL AUTO_INCREMENT,  `salesDate` VARCHAR(45) NULL,  `totalCost` DOUBLE NULL,  PRIMARY KEY (`salesID`))ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`receipt`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`receipt` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`receipt` (  `receiptID` INT NOT NULL AUTO_INCREMENT,  `recipeID` INT NOT NULL,  `salesID` INT NOT NULL,  `orderQuantity` INT NULL,  PRIMARY KEY (`receiptID`, `recipeID`, `salesID`),  CONSTRAINT `fk_receipt_recipe1`    FOREIGN KEY (`recipeID`)    REFERENCES `resturantDB`.`recipe` (`recipeID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION,  CONSTRAINT `fk_receipt_sales1`    FOREIGN KEY (`salesID`)    REFERENCES `resturantDB`.`sales` (`salesID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION)ENGINE = InnoDB;-- ------------------------------------------------------- Table `resturantDB`.`sales_employee`-- -----------------------------------------------------DROP TABLE IF EXISTS `resturantDB`.`sales_employee` ;CREATE TABLE IF NOT EXISTS `resturantDB`.`sales_employee` (  `sales_employeeID` INT NOT NULL AUTO_INCREMENT,  `employeeID` INT NOT NULL,  `salesID` INT NOT NULL,  PRIMARY KEY (`sales_employeeID`, `employeeID`, `salesID`),  CONSTRAINT `fk_sales_employee_employee1`    FOREIGN KEY (`employeeID`)    REFERENCES `resturantDB`.`employee` (`employeeID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION,  CONSTRAINT `fk_sales_employee_sales1`    FOREIGN KEY (`salesID`)    REFERENCES `resturantDB`.`sales` (`salesID`)    ON DELETE NO ACTION    ON UPDATE NO ACTION)ENGINE = InnoDB;SET SQL_MODE=@OLD_SQL_MODE;SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;-- ------------------------------------------------------- Data for table `resturantDB`.`inventory`-- -----------------------------------------------------START TRANSACTION;USE `resturantDB`;INSERT INTO `resturantDB`.`inventory` (`inventoryID`, `item`, `qty`, `itemThreshold`, `itemLimit`) VALUES (1, 'Chicken Fillet ', 1000, 0.25, 1000);INSERT INTO `resturantDB`.`inventory` (`inventoryID`, `item`, `qty`, `itemThreshold`, `itemLimit`) VALUES (2, 'Beef Burger Patty', 1000, 0.25, 1000);INSERT INTO `resturantDB`.`inventory` (`inventoryID`, `item`, `qty`, `itemThreshold`, `itemLimit`) VALUES (3, 'Burger rolls', 1000, 0.25, 1000);INSERT INTO `resturantDB`.`inventory` (`inventoryID`, `item`, `qty`, `itemThreshold`, `itemLimit`) VALUES (4, 'Lettuce', 100, 0.50, 1000);INSERT INTO `resturantDB`.`inventory` (`inventoryID`, `item`, `qty`, `itemThreshold`, `itemLimit`) VALUES (5, 'Tomatoe', 100, 0.50, 100);INSERT INTO `resturantDB`.`inventory` (`inventoryID`, `item`, `qty`, `itemThreshold`, `itemLimit`) VALUES (6, 'Chicken Wings', 1000, 0.2, 1000);INSERT INTO `resturantDB`.`inventory` (`inventoryID`, `item`, `qty`, `itemThreshold`, `itemLimit`) VALUES (7, 'Pork Ribs', 1000, 0.2, 1000);COMMIT;-- ------------------------------------------------------- Data for table `resturantDB`.`supplier`-- -----------------------------------------------------START TRANSACTION;USE `resturantDB`;INSERT INTO `resturantDB`.`supplier` (`supplierID`, `supplierName`, `supplierEmail`, `supplierNumber`, `supplierAddress`) VALUES (1, 'Meat Co.', 'meatco@gmail.com', '084 772 2883', 'Rondebosch');INSERT INTO `resturantDB`.`supplier` (`supplierID`, `supplierName`, `supplierEmail`, `supplierNumber`, `supplierAddress`) VALUES (2, 'VegCity', 'vegcity@hotmail.co.za', '078 232 1221', 'Claremont');COMMIT;-- ------------------------------------------------------- Data for table `resturantDB`.`employee`-- -----------------------------------------------------START TRANSACTION;USE `resturantDB`;INSERT INTO `resturantDB`.`employee` (`employeeID`, `employeeFName`, `employeeLName`, `employeePassword`, `employeeContactNumber`, `employeeHoursWorked`, `employeeStatus`, `employeePosition`, `admin`) VALUES (1, 'Andrew', 'Schwabe', 'Password', '076 273 1721', '00:00', NULL, NULL, 1);INSERT INTO `resturantDB`.`employee` (`employeeID`, `employeeFName`, `employeeLName`, `employeePassword`, `employeeContactNumber`, `employeeHoursWorked`, `employeeStatus`, `employeePosition`, `admin`) VALUES (2, 'Zane', 'Smith', 'Password', '034 233 8321', '00:00', NULL, NULL, 1);INSERT INTO `resturantDB`.`employee` (`employeeID`, `employeeFName`, `employeeLName`, `employeePassword`, `employeeContactNumber`, `employeeHoursWorked`, `employeeStatus`, `employeePosition`, `admin`) VALUES (3, 'Chad', 'Phillips', 'Password', '087 237 1277', '00:00', NULL, NULL, 0);INSERT INTO `resturantDB`.`employee` (`employeeID`, `employeeFName`, `employeeLName`, `employeePassword`, `employeeContactNumber`, `employeeHoursWorked`, `employeeStatus`, `employeePosition`, `admin`) VALUES (4, 'Sean', 'Thompson', 'Password', '072 377 1122', '00:00', NULL, NULL, 0);COMMIT;